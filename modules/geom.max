import maxime.Num

feature Shape[s]
  bounds(shape: s) -> Rect


class Point is Shape
  Point(x: Number, y: Number)
  swap() -> Point = Point(y, x)
  bounds() -> Rect = Rect(x, y, 0, 0)


class Line is Shape
  Line(x1: Num, y1: Num, x2: Num, y2: Num)
  
  bounds() -> Rect =
    Rect(min(x1, x2), min(y1, y2), abs(x2 - x1), abs(y2 - y1))


class Rect is Shape
  Rect(x: Num, y: Num, width: Num, height: Num)
  bounds() -> Rect = Rect(0, 0, width, height)

class Matrix
  Matrix(a: Num, b: Num, c: Num, d: Num, e: Num, f: Num)